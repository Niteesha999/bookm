import jaydebeapi
from openpyxl import load_workbook
import os

# Path to the Netezza JDBC driver JAR file
jdbc_driver_path = '/path/to/nzjdbc.jar'  # Replace with your actual path to nzjdbc.jar

# Database connection details
url = 'jdbc:netezza://your_server_url:5480/your_database'  # Replace with your server URL and database name
driver_class = 'org.netezza.Driver'

# Read credentials from a text file
def read_credentials(file_path):
    credentials = {}
    with open(file_path, 'r') as file:
        for line in file:
            key, value = line.strip().split('=')
            credentials[key] = value
    return credentials

# Read username and password
credentials_file = 'credentials.txt'
credentials = read_credentials(credentials_file)
username = credentials.get('username')
password = credentials.get('password')

# Load the Excel file
excel_file = r'path_to_your_excel_file.xlsx'  # Replace with your file path
workbook = load_workbook(excel_file)
sheet = workbook.active  # Assuming you want to read from the first sheet

# Path to output text file
output_file = 'output_file.txt'

# Clear the text file if it already exists
if os.path.exists(output_file):
    os.remove(output_file)

# Function to execute a sample SQL query
def execute_sql_query(conn, id_value):
    try:
        # Sample SQL query (modify as needed)
        query = f"SELECT * FROM your_table WHERE id_column = '{id_value}'"
        cursor = conn.cursor()
        cursor.execute(query)
        # Fetch results (optional, depends on what you need to do)
        result = cursor.fetchall()  # You can check the result for success if needed
        cursor.close()
        print(f"Query executed successfully for ID: {id_value}")
        return True  # Return True if the query succeeds
    except Exception as e:
        print(f"Failed to execute query for ID {id_value}: {e}")
        return False  # Return False if the query fails

# Test connection to Netezza and process IDs from Excel
try:
    # Establish a connection using the JDBC driver
    conn = jaydebeapi.connect(driver_class, url, [username, password], jdbc_driver_path)
    print("Connection to Netezza database was successful.")
    
    # Loop through each row in the sheet, get IDs, execute SQL, and write to file
    with open(output_file, 'a') as file:
        for row in sheet.iter_rows(min_row=2, values_only=True):  # Assuming first row is headers
            id_value = row[0]  # Adjust the column index if necessary
            if id_value:  # Ensure the value is not None or empty
                # Step 1: Read the ID
                print(f"Processing ID: {id_value}")

                # Step 2: Execute the SQL query
                if execute_sql_query(conn, id_value):
                    # Step 3: Write the ID to the text file if the query succeeds
                    file.write(f"{id_value}\n")
                    file.flush()  # Ensure immediate write
                    print(f"ID {id_value} written to file.\n")
    
    # Close the database connection
    conn.close()
except Exception as e:
    print(f"Failed to connect to the Netezza database: {e}")
